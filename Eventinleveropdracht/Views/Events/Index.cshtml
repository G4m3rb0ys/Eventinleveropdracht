@model IEnumerable<Eventinleveropdracht.Models.Event>

@{
    ViewData["Title"] = "Index";
    var selectedOrganiserId = Context.Request.Query["organiserId"].ToString();
}

<div class="d-flex justify-content-between">
    <p>
        <a asp-action="Create" class="btn btn-warning">Create new Event</a>
    </p>

    <!-- Bootstrap Dropdown voor organisator selectie -->
    <div class="dropdown">
        <button class="btn btn-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
            Selecteer een organisator
        </button>
        <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <li><a class="dropdown-item" href="?organiserId=">Alle Organisatoren</a></li>
            @foreach (var organiser in ViewBag.Organisers)
            {
                <li>
                    <a class="dropdown-item @(selectedOrganiserId == organiser.Value ? "active" : "")" href="?organiserId=@organiser.Value">
                        @organiser.Text
                    </a>
                </li>
            }
        </ul>
    </div>
</div>

<!-- Event-tabel -->
<table class="table">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Name)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Description)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().FromDate)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().ToDate)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Location)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Type)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Requirements)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().MaxParticipants)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().CurrentParticipants)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Image)</th>
            <th>@Html.DisplayNameFor(model => model.FirstOrDefault().Organiser.Name)</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Name)</td>
                <td>@Html.DisplayFor(modelItem => item.Description)</td>
                <td>@Html.DisplayFor(modelItem => item.FromDate)</td>
                <td>@Html.DisplayFor(modelItem => item.ToDate)</td>
                <td>@Html.DisplayFor(modelItem => item.Location)</td>
                <td>@Html.DisplayFor(modelItem => item.Type)</td>
                <td>@Html.DisplayFor(modelItem => item.Requirements)</td>
                <td>@Html.DisplayFor(modelItem => item.MaxParticipants)</td>
                <td>@Html.DisplayFor(modelItem => item.CurrentParticipants)</td>
                <td>@Html.DisplayFor(modelItem => item.Image)</td>
                <td>@Html.DisplayFor(modelItem => item.Organiser.Name)</td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

